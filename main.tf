/*
* # Azure Cosmos DB module
*
* This repository contains our module for creating Cosmos DB resources on Azure. The aim is to provide a simple module, but flexible module that can be used in any Azure environment.
*
* > Note: This module, until version 1.0.0 is considered to be in beta, and breaking changes may occur. Please use with caution.
*
* All requirements and example code is automatically generated by using `terraform-docs`, and this text can be found and updated in the `main.tf` file.
*/

resource "azurerm_cosmosdb_account" "main" {
  name                = format("cosmos-%s", var.name)
  resource_group_name = var.resource_group_name
  location            = var.location
  offer_type          = var.offer_type
  kind                = var.kind

  consistency_policy {
    consistency_level       = var.consistency_policy.consistency_level
    max_interval_in_seconds = var.consistency_policy.max_interval_in_seconds
    max_staleness_prefix    = var.consistency_policy.max_staleness_prefix
  }

  geo_location {
    location          = var.geo_location.location
    failover_priority = var.geo_location.failover_priority
  }

  tags = merge(var.tags, {
    source         = "terraform"
    module         = "fortytwoservices/cosmosdb/azurerm"
    module_version = "0.1.0"
  })
}

resource "azurerm_cosmosdb_sql_database" "main" {
  name                = format("cosno-%s", var.name)
  resource_group_name = var.resource_group_name
  account_name        = azurerm_cosmosdb_account.main.name
  throughput          = var.sql_database.throughput

  dynamic "autoscale_settings" {
    for_each = var.sql_database.autoscale_settings != null ? ["enable"] : []
    content {
      max_throughput = var.sql_database.autoscale_settings.max_throughput
    }
  }
}
